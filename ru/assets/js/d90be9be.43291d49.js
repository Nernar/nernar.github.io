"use strict";(self.webpackChunkinnercore_docs=self.webpackChunkinnercore_docs||[]).push([[52343],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>g});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var d=n.createContext({}),o=function(t){var e=n.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=o(t.components);return n.createElement(d.Provider,{value:e},t.children)},k={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},N=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),N=o(a),g=r,s=N["".concat(d,".").concat(g)]||N[g]||k[g]||l;return a?n.createElement(s,i(i({ref:e},m),{},{components:a})):n.createElement(s,i({ref:e},m))}));function g(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=N;var p={};for(var d in e)hasOwnProperty.call(e,d)&&(p[d]=e[d]);p.originalType=t,p.mdxType="string"==typeof t?t:r,i[1]=p;for(var o=2;o<l;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}N.displayName="MDXCreateElement"},76278:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>p,default:()=>N,frontMatter:()=>i,metadata:()=>d,toc:()=>m});var n=a(87462),r=(a(67294),a(3905)),l=a(95999);const i={title:"Entity",sidebar_label:"Entity",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},p=void 0,d={unversionedId:"Entity/index",id:"Entity/index",title:"Entity",description:"",source:"@site/api/www/Entity/index.mdx",sourceDirName:"Entity",slug:"/Entity/",permalink:"/ru/api/Entity/",draft:!1,tags:[],version:"current",frontMatter:{title:"Entity",sidebar_label:"Entity",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},sidebar:"defaultSidebar"},o={},m=[],k={toc:m};function N(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",null,(0,r.kt)(l.Z,{id:"api.heading.namespace",values:{scopedName:"Entity"},mdxType:"Translate"},"{scopedName} namespace")),(0,r.kt)("p",null,"Module used to manipulate entities (mobs, drop, arrows, etc.) in the world. Every entity has its unique numeric id which is often used across this module as the first function parameter"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)(l.Z,{id:"api.section.signature",mdxType:"Translate"},"Signature"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export namespace Entity \n")),(0,r.kt)("h3",null,(0,r.kt)(l.Z,{id:"api.section.classes",mdxType:"Translate"},"Classes")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(l.Z,{id:"api.block.class",mdxType:"Translate"},"Class")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(l.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/EntityHealth"},"EntityHealth")),(0,r.kt)("td",{parentName:"tr",align:null},"Class used to manipulate entity's health")))),(0,r.kt)("h3",null,(0,r.kt)(l.Z,{id:"api.section.functions",mdxType:"Translate"},"Functions")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(l.Z,{id:"api.block.function",mdxType:"Translate"},"Function")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(l.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/addEffect"},"addEffect(ent, effectId, effectData, effectTime, ambience, particles)")),(0,r.kt)("td",{parentName:"tr",align:null},"Adds an effect to the mob")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/addPosition"},"addPosition(ent, x, y, z)")),(0,r.kt)("td",{parentName:"tr",align:null},"Updates current entity position by specified coordinates")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/addVelocity"},"addVelocity(ent, x, y, z)")),(0,r.kt)("td",{parentName:"tr",align:null},"Updates current entity's velocity by specified value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/clearEffect"},"clearEffect(ent, id)")),(0,r.kt)("td",{parentName:"tr",align:null},"Clears effect, applied to the mob")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/clearEffects"},"clearEffects(ent)")),(0,r.kt)("td",{parentName:"tr",align:null},"Clears all effects of the mob")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/damageEntity"},"damageEntity(ent, damage, cause, params)")),(0,r.kt)("td",{parentName:"tr",align:null},"Damages entity")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/findNearest"},"findNearest(coords, type, maxRange)")),(0,r.kt)("td",{parentName:"tr",align:null},"Retrieves nearest to the coordinates entity of the specified entity type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getAge"},"getAge(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getAll"},"getAll()")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getAllInRange"},"getAllInRange(coords, maxRange, type)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns array of all entities' numeric ids in given range in blocks")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getAllJS"},"getAllJS()")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getArmorSlot"},"getArmorSlot(ent, slot)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getAttribute"},"getAttribute(ent, attribute)")),(0,r.kt)("td",{parentName:"tr",align:null},"Creates an object used to change entity's attributes. See  page for details.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getCarriedItem"},"getCarriedItem(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getCompoundTag"},"getCompoundTag(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getCustom"},"getCustom(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getDimension"},"getDimension(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getDistanceBetweenCoords"},"getDistanceBetweenCoords(coords1, coords2)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getDistanceToCoords"},"getDistanceToCoords(ent, coords)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getDistanceToEntity"},"getDistanceToEntity(ent1, ent2)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getDroppedItem"},"getDroppedItem(ent)")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets item from specified drop entity")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getEffect"},"getEffect(entity, effectId)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getExtra"},"getExtra(ent, name)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getExtraJson"},"getExtraJson(ent, name)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getHealth"},"getHealth(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getInventory"},"getInventory(ent, handleNames, handleEnchant)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getLookAngle"},"getLookAngle(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getLookAt"},"getLookAt(ent, x, y, z)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getLookVector"},"getLookVector(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getLookVectorByAngle"},"getLookVectorByAngle(angle)")),(0,r.kt)("td",{parentName:"tr",align:null},"Transforms look angle into look vector")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getMaxHealth"},"getMaxHealth(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getMobile"},"getMobile(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getMovingAngle"},"getMovingAngle(ent)")),(0,r.kt)("td",{parentName:"tr",align:null},"Retrieves entity look angle in the form of pitch/yaw angle. No other information included to the resulting object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getMovingAngleByPositions"},"getMovingAngleByPositions(pos1, pos2)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getMovingVector"},"getMovingVector(ent)")),(0,r.kt)("td",{parentName:"tr",align:null},"Retrieves entity's current movement information")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getNameTag"},"getNameTag(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getPathNavigation"},"getPathNavigation(ent)")),(0,r.kt)("td",{parentName:"tr",align:null},"Creates or gets an existing ","[","[","PathNavigation","]","]"," instance for the specified mob")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getPosition"},"getPosition(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getProjectileItem"},"getProjectileItem(projectile)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getRender"},"getRender(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getRider"},"getRider(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getRiding"},"getRiding(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getSkin"},"getSkin(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getSneaking"},"getSneaking(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getTarget"},"getTarget(ent)")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the attack target of current entity")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getType"},"getType(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getTypeAddon"},"getTypeAddon(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getTypeUniversal"},"getTypeUniversal(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getVelocity"},"getVelocity(ent)")),(0,r.kt)("td",{parentName:"tr",align:null},"Get current entity's velocity using velocity vector")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/getXZPlayerDis"},"getXZPlayerDis(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/hasEffect"},"hasEffect(entity, effectId)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/healEntity"},"healEntity(ent, heal)")),(0,r.kt)("td",{parentName:"tr",align:null},"Adds specified health amount to the entity")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/health"},"health(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/isExist"},"isExist(ent)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/lookAt"},"lookAt(ent, x, y, z)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets entity look angle to look at specified coordinates")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/lookAtCoords"},"lookAtCoords(ent, coords)")),(0,r.kt)("td",{parentName:"tr",align:null},"Same as ","[","[","Entity.lookAt","]","]"," but uses Vector as param type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/moveToAngle"},"moveToAngle(ent, angle, params)")),(0,r.kt)("td",{parentName:"tr",align:null},"Makes entity move using pitch/yaw angle to determine direction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/moveToLook"},"moveToLook(ent, params)")),(0,r.kt)("td",{parentName:"tr",align:null},"Makes entity move towards its current look angle")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/moveToTarget"},"moveToTarget(ent, target, params)")),(0,r.kt)("td",{parentName:"tr",align:null},"Makes entity move to the target coordinates")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/putExtra"},"putExtra(ent, name, extra)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/putExtraJson"},"putExtraJson(ent, name, obj)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/remove"},"remove(ent)")),(0,r.kt)("td",{parentName:"tr",align:null},"Removes entity from the world")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/rideAnimal"},"rideAnimal(entity, rider)")),(0,r.kt)("td",{parentName:"tr",align:null},"Makes rider ride entity")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setAge"},"setAge(ent, age)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setArmorSlot"},"setArmorSlot(ent, slot, id, count, data, extra)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets armor slot contents for the entity")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setCarriedItem"},"setCarriedItem(ent, id, count, data, extra)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets current carried item for the entity")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setCompoundTag"},"setCompoundTag(ent, tag)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets compound tag for the specified entity")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setDroppedItem"},"setDroppedItem(ent, id, count, data, extra)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets item to the specified drop entity")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setFire"},"setFire(ent, fire, force)")),(0,r.kt)("td",{parentName:"tr",align:null},"Puts entity on fire")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setHealth"},"setHealth(ent, health)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets entity's current health value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setHitbox"},"setHitbox(ent, w, h)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets hitbox to the entity. Hitboxes define entities collisions")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setLookAngle"},"setLookAngle(ent, yaw, pitch)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets specified pitch and yaw as look angle for the entity")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setMaxHealth"},"setMaxHealth(ent, health)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets entity's maximum health value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setMobile"},"setMobile(ent, mobile)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets entity's immobile state")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setNameTag"},"setNameTag(ent, tag)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets custom entity tag. Custom entity tags are displayed above the entities and can be set by player using label")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setPosition"},"setPosition(ent, x, y, z)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets the specified coordinates as a new position for the entity. No checks are performed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setRender"},"setRender(ent, render)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets entity render type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setSkin"},"setSkin(ent, skin)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets mob skin")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setSneaking"},"setSneaking(ent, sneak)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets entity's sneaking state")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setTarget"},"setTarget(ent, target)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets the attack target for current entity. Works only for mobs that actually can attack")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setTexture"},"setTexture(ent, texture)")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets mob skin, uses ","[","[","Texture","]","]"," object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/setVelocity"},"setVelocity(ent, x, y, z)")),(0,r.kt)("td",{parentName:"tr",align:null},"Set current entity's velocity using velocity vector")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/spawn"},"spawn(x, y, z, type, skin)")),(0,r.kt)("td",{parentName:"tr",align:null},"Spawns vanilla entity on the specified coordinates")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/spawnAtCoords"},"spawnAtCoords(coords, type, skin)")),(0,r.kt)("td",{parentName:"tr",align:null},"Same as ","[","[","Entity.spawn","]","]",", but uses ","[","[","Vector","]","]"," object to represent coordinates")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/spawnCustom"},"spawnCustom(name, x, y, z, extra)")),(0,r.kt)("td",{parentName:"tr",align:null},"Spawns custom entity on the specified coords. Allows to pass some values to controllers via extra param")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/spawnCustomAtCoords"},"spawnCustomAtCoords(name, coords, extra)")),(0,r.kt)("td",{parentName:"tr",align:null},"Same as ","[","[","Entity.spawnCustom","]","]",", but uses ","[","[","Vector","]","]"," object to represent coordinates")))),(0,r.kt)("h3",null,(0,r.kt)(l.Z,{id:"api.section.interfaces",mdxType:"Translate"},"Interfaces")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(l.Z,{id:"api.block.interface",mdxType:"Translate"},"Interface")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(l.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/AttributeInstance"},"AttributeInstance")),(0,r.kt)("td",{parentName:"tr",align:null},"Interface used to modify attribute values")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/EffectInstance"},"EffectInstance")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/MoveParams"},"MoveParams")),(0,r.kt)("td",{parentName:"tr",align:null},"Interface used to specify how entity should move")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/MovingVector"},"MovingVector")),(0,r.kt)("td",{parentName:"tr",align:null},"Interface used to return entity's current moving vector and some additional data")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/PathNavigation"},"PathNavigation")),(0,r.kt)("td",{parentName:"tr",align:null},"Object used to build path and move mobs to the required coordinates using specified parameters. All the setters return current ","[","[","PathNavigation","]","]"," instance to be able to produce chained calls. Some of the")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Entity/PathNavigationResultFunction"},"PathNavigationResultFunction")),(0,r.kt)("td",{parentName:"tr",align:null},"Occurs when path navigation is finished or aborted")))))}N.isMDXComponent=!0}}]);