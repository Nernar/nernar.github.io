"use strict";(self.webpackChunkinnercore_docs=self.webpackChunkinnercore_docs||[]).push([[69311],{3905:(t,e,a)=>{a.d(e,{Zo:()=>s,kt:()=>u});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var o=r.createContext({}),c=function(t){var e=r.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},s=function(t){var e=c(t.components);return r.createElement(o.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,o=t.parentName,s=p(t,["components","mdxType","originalType","parentName"]),m=c(a),u=n,k=m["".concat(o,".").concat(u)]||m[u]||d[u]||i;return a?r.createElement(k,l(l({ref:e},s),{},{components:a})):r.createElement(k,l({ref:e},s))}));function u(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,l=new Array(i);l[0]=m;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p.mdxType="string"==typeof t?t:n,l[1]=p;for(var c=2;c<i;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},50987:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>p,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=a(87462),n=(a(67294),a(3905)),i=a(95999);const l={title:"Particles",sidebar_label:"Particles",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},p=void 0,o={unversionedId:"Particles/index",id:"Particles/index",title:"Particles",description:"",source:"@site/api/www/Particles/index.mdx",sourceDirName:"Particles",slug:"/Particles/",permalink:"/ru/api/Particles/",draft:!1,tags:[],version:"current",frontMatter:{title:"Particles",sidebar_label:"Particles",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},sidebar:"defaultSidebar"},c={},s=[],d={toc:s};function m(t){let{components:e,...a}=t;return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h2",null,(0,n.kt)(i.Z,{id:"api.heading.namespace",values:{scopedName:"Particles"},mdxType:"Translate"},"{scopedName} namespace")),(0,n.kt)("p",null,"Module to work with vanilla and custom particles."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"export namespace Particles \n")),(0,n.kt)("h3",null,(0,n.kt)(i.Z,{id:"api.section.classes",mdxType:"Translate"},"Classes")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(i.Z,{id:"api.block.class",mdxType:"Translate"},"Class")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(i.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleAnimator"},"ParticleAnimator")),(0,n.kt)("td",{parentName:"tr",align:null},"Animators allow to change some properties of the specific particle depending on the time. Mostly for internal use, put animators' descriptors into ",(0,n.kt)("code",null,"animators")," parameter of custom particle type instead.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleEmitter"},"ParticleEmitter")),(0,n.kt)("td",{parentName:"tr",align:null},"Particle emitter allows to change their position after spawn. It represents a coordinate system, where created particles are located and which you can move however you want.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleSubEmitter"},"ParticleSubEmitter")),(0,n.kt)("td",{parentName:"tr",align:null},"Sub-emitters describe how specific particle can emit other particles, according to some events, that may happen to it. Mostly for internal use, put sub-emitters descriptors into ",(0,n.kt)("code",null,"emitters"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleType"},"ParticleType")),(0,n.kt)("td",{parentName:"tr",align:null},"Class to create custom particle types. Mostly for internal use, you can use ",(0,n.kt)("a",{parentName:"td",href:"/api/Particles/registerParticleType"},"Particles.registerParticleType()")," instead.")))),(0,n.kt)("h3",null,(0,n.kt)(i.Z,{id:"api.section.functions",mdxType:"Translate"},"Functions")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(i.Z,{id:"api.block.function",mdxType:"Translate"},"Function")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(i.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/addFarParticle"},"addFarParticle(type, x, y, z, vx, vy, vz, data)")),(0,n.kt)("td",{parentName:"tr",align:null},"Same as ",(0,n.kt)("a",{parentName:"td",href:"/api/Particles/addParticle"},"Particles.addParticle()"),", but applies ",(0,n.kt)("code",null,"far")," shader to the particle.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/addParticle"},"addParticle(type, x, y, z, vx, vy, vz, data)")),(0,n.kt)("td",{parentName:"tr",align:null},"Spawns particle of given type on given coords with given velocity and additional parameters in the world.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/getParticleTypeById"},"getParticleTypeById(id)")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/registerParticleType"},"registerParticleType(descriptor)")),(0,n.kt)("td",{parentName:"tr",align:null},"Registers new custom particle type of given params object.")))),(0,n.kt)("h3",null,(0,n.kt)(i.Z,{id:"api.section.interfaces",mdxType:"Translate"},"Interfaces")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(i.Z,{id:"api.block.interface",mdxType:"Translate"},"Interface")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(i.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/AnimatorDescription"},"AnimatorDescription")),(0,n.kt)("td",{parentName:"tr",align:null},"Custom particle's animator params object.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleDescription"},"ParticleDescription")),(0,n.kt)("td",{parentName:"tr",align:null},"Custom particle type params object.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/SubEmitterDescription"},"SubEmitterDescription")),(0,n.kt)("td",{parentName:"tr",align:null},"Custom particle's sub-emitter params object.")))))}m.isMDXComponent=!0}}]);