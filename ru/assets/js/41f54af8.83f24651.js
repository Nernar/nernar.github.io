"use strict";(self.webpackChunkinnercore_docs=self.webpackChunkinnercore_docs||[]).push([[88678],{3905:(t,e,a)=>{a.d(e,{Zo:()=>o,kt:()=>s});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var d=r.createContext({}),m=function(t){var e=r.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},o=function(t){var e=m(t.components);return r.createElement(d.Provider,{value:e},t.children)},y={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},k=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,d=t.parentName,o=p(t,["components","mdxType","originalType","parentName"]),k=m(a),s=n,u=k["".concat(d,".").concat(s)]||k[s]||y[s]||l;return a?r.createElement(u,i(i({ref:e},o),{},{components:a})):r.createElement(u,i({ref:e},o))}));function s(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=k;var p={};for(var d in e)hasOwnProperty.call(e,d)&&(p[d]=e[d]);p.originalType=t,p.mdxType="string"==typeof t?t:n,i[1]=p;for(var m=2;m<l;m++)i[m]=a[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}k.displayName="MDXCreateElement"},41926:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>m,contentTitle:()=>p,default:()=>k,frontMatter:()=>i,metadata:()=>d,toc:()=>o});var r=a(87462),n=(a(67294),a(3905)),l=a(95999);const i={title:"Player",sidebar_label:"Player",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},p=void 0,d={unversionedId:"Player/index",id:"Player/index",title:"Player",description:"",source:"@site/api/www/Player/index.mdx",sourceDirName:"Player",slug:"/Player/",permalink:"/ru/api/Player/",draft:!1,tags:[],version:"current",frontMatter:{title:"Player",sidebar_label:"Player",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},sidebar:"defaultSidebar"},m={},o=[],y={toc:o};function k(t){let{components:e,...a}=t;return(0,n.kt)("wrapper",(0,r.Z)({},y,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h2",null,(0,n.kt)(l.Z,{id:"api.heading.namespace",values:{scopedName:"Player"},mdxType:"Translate"},"{scopedName} namespace")),(0,n.kt)("p",null,"Module used to manipulate player. Player is also an entity in Minecraft, so you can use all the functions from ",(0,n.kt)("a",{parentName:"p",href:"/api/Entity"},"Entity")," module as well. To get player's entity ID, call ",(0,n.kt)("a",{parentName:"p",href:"/api/Player/get"},"Player.get()")," function."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"export namespace Player \n")),(0,n.kt)("h3",null,(0,n.kt)(l.Z,{id:"api.section.classes",mdxType:"Translate"},"Classes")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(l.Z,{id:"api.block.class",mdxType:"Translate"},"Class")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(l.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/PlayerExhaustion"},"PlayerExhaustion")),(0,n.kt)("td",{parentName:"tr",align:null},"Class used to manipulate player's exhaustion.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/PlayerExperience"},"PlayerExperience")),(0,n.kt)("td",{parentName:"tr",align:null},"Class used to manipulate player's experience.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/PlayerFlying"},"PlayerFlying")),(0,n.kt)("td",{parentName:"tr",align:null},"Class used to manipulate player's flying ability and state.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/PlayerHealth"},"PlayerHealth")),(0,n.kt)("td",{parentName:"tr",align:null},"Class used to manipulate player's health.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/PlayerHunger"},"PlayerHunger")),(0,n.kt)("td",{parentName:"tr",align:null},"Class used to manipulate player's hunger.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/PlayerLevel"},"PlayerLevel")),(0,n.kt)("td",{parentName:"tr",align:null},"Class used to manipulate player's level.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/PlayerSaturation"},"PlayerSaturation")),(0,n.kt)("td",{parentName:"tr",align:null},"Class used to manipulate player's saturation.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/PlayerScore"},"PlayerScore")),(0,n.kt)("td",{parentName:"tr",align:null},"Class used to manipulate player's score.")))),(0,n.kt)("h3",null,(0,n.kt)(l.Z,{id:"api.section.functions",mdxType:"Translate"},"Functions")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(l.Z,{id:"api.block.function",mdxType:"Translate"},"Function")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(l.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/addExperience"},"addExperience(exp)")),(0,n.kt)("td",{parentName:"tr",align:null},"Adds specified amount of experience to the current value.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/addItemToInventory"},"addItemToInventory(id, count, data, extra, preventDrop)")),(0,n.kt)("td",{parentName:"tr",align:null},"Adds items to player's inventory, stacking them if possible.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/addLevel"},"addLevel(level)")),(0,n.kt)("td",{parentName:"tr",align:null},"Adds specified amount of level to the current value.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/addPosition"},"addPosition(x, y, z)")),(0,n.kt)("td",{parentName:"tr",align:null},"Changes current player position by specified vector.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/addVelocity"},"addVelocity(x, y, z)")),(0,n.kt)("td",{parentName:"tr",align:null},"Updates current entity's velocity by specified values.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/decreaseCarriedItem"},"decreaseCarriedItem(count)")),(0,n.kt)("td",{parentName:"tr",align:null},"Decreases carried item count by specified number.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/exhaustion"},"exhaustion()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/experience"},"experience()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/flying"},"flying()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/get"},"get()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getArmorSlot"},"getArmorSlot(slot)")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getBooleanAbility"},"getBooleanAbility(ability)")),(0,n.kt)("td",{parentName:"tr",align:null},"Gets one of the player's abilities in a boolean form.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getCarriedItem"},"getCarriedItem()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getCarriedItem"},"getCarriedItem(handleEnchant, handleNames)")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getDimension"},"getDimension()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getExhaustion"},"getExhaustion()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getExperience"},"getExperience()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getFloatAbility"},"getFloatAbility(ability)")),(0,n.kt)("td",{parentName:"tr",align:null},"Gets one of the player's abilities in a form of floating-point number.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getFlying"},"getFlying()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getFlyingEnabled"},"getFlyingEnabled()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getHealth"},"getHealth()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getHunger"},"getHunger()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getInventory"},"getInventory(loadPart, handleEnchant, handleNames)")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getInventorySlot"},"getInventorySlot(slot)")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getLevel"},"getLevel()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getName"},"getName()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getNameForEnt"},"getNameForEnt(ent)")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getPointed"},"getPointed()")),(0,n.kt)("td",{parentName:"tr",align:null},"Fetches information about the objects player is currently pointing.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getPosition"},"getPosition()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getSaturation"},"getSaturation()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getScore"},"getScore()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getSelectedSlotId"},"getSelectedSlotId()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/getVelocity"},"getVelocity()")),(0,n.kt)("td",{parentName:"tr",align:null},"Get player's velocity.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/health"},"health()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/hunger"},"hunger()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/isPlayer"},"isPlayer(ent)")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/level"},"level()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/resetCameraEntity"},"resetCameraEntity()")),(0,n.kt)("td",{parentName:"tr",align:null},"Resets player's camera if it was previously set to another entity.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/resetFov"},"resetFov()")),(0,n.kt)("td",{parentName:"tr",align:null},"Resets view zoom to the default value.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/saturation"},"saturation()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/score"},"score()")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setAbility"},"setAbility(ability, value)")),(0,n.kt)("td",{parentName:"tr",align:null},"Sets some of the player's abilities. If the argument is of type boolean, sets the ability as the boolean one, otherwise as numeric one.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setArmorSlot"},"setArmorSlot(slot, id, count, data, extra)")),(0,n.kt)("td",{parentName:"tr",align:null},"Sets contents of the specified armor slot.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setCameraEntity"},"setCameraEntity(ent)")),(0,n.kt)("td",{parentName:"tr",align:null},"Sets player's camera to the specified entity.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setCarriedItem"},"setCarriedItem(id, count, data, extra)")),(0,n.kt)("td",{parentName:"tr",align:null},"Sets item in player's hand.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setExhaustion"},"setExhaustion(value)")),(0,n.kt)("td",{parentName:"tr",align:null},"Sets player's exhaustion.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setExperience"},"setExperience(exp)")),(0,n.kt)("td",{parentName:"tr",align:null},"Sets player's experience.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setFlying"},"setFlying(enabled)")),(0,n.kt)("td",{parentName:"tr",align:null},"Changes player's current flying state, call ",(0,n.kt)("a",{parentName:"td",href:"/api/Player/setFlyingEnabled"},"Player.setFlyingEnabled()")," to be able to set this property to ",(0,n.kt)("code",null,"true"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setFlyingEnabled"},"setFlyingEnabled(enabled)")),(0,n.kt)("td",{parentName:"tr",align:null},"Enables or disables player's ability to fly.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setFov"},"setFov(fov)")),(0,n.kt)("td",{parentName:"tr",align:null},"Sets view zoom, to reset value call ",(0,n.kt)("a",{parentName:"td",href:"/api/Player/resetFov"},"Player.resetFov()"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setHealth"},"setHealth(value)")),(0,n.kt)("td",{parentName:"tr",align:null},"Sets player's health.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setHunger"},"setHunger(value)")),(0,n.kt)("td",{parentName:"tr",align:null},"Sets player's hunger.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setInventorySlot"},"setInventorySlot(slot, id, count, data, extra)")),(0,n.kt)("td",{parentName:"tr",align:null},"Sets contents of the specified inventory slot.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setLevel"},"setLevel(level)")),(0,n.kt)("td",{parentName:"tr",align:null},"Sets player's level.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setPosition"},"setPosition(x, y, z)")),(0,n.kt)("td",{parentName:"tr",align:null},"Sets specified coordinates as player's position.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setSaturation"},"setSaturation(value)")),(0,n.kt)("td",{parentName:"tr",align:null},"Sets player's saturation.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setSelectedSlotId"},"setSelectedSlotId(slot)")),(0,n.kt)("td",{parentName:"tr",align:null},"Selects currently selected inventory slot.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Player/setVelocity"},"setVelocity(x, y, z)")),(0,n.kt)("td",{parentName:"tr",align:null},"Set player's velocity using velocity vector.")))))}k.isMDXComponent=!0}}]);