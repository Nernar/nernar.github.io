"use strict";(self.webpackChunkinnercore_docs=self.webpackChunkinnercore_docs||[]).push([[39640],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),k=p(a),u=r,N=k["".concat(o,".").concat(u)]||k[u]||d[u]||i;return a?n.createElement(N,l(l({ref:t},m),{},{components:a})):n.createElement(N,l({ref:t},m))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=k;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},89350:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>k,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var n=a(87462),r=(a(67294),a(3905)),i=a(95999);const l={title:"Dimensions",sidebar_label:"Dimensions",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},s=void 0,o={unversionedId:"Dimensions/index",id:"Dimensions/index",title:"Dimensions",description:"",source:"@site/api/www/Dimensions/index.mdx",sourceDirName:"Dimensions",slug:"/Dimensions/",permalink:"/ru/api/Dimensions/",draft:!1,tags:[],version:"current",frontMatter:{title:"Dimensions",sidebar_label:"Dimensions",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},sidebar:"defaultSidebar"},p={},m=[],d={toc:m};function k(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",null,(0,r.kt)(i.Z,{id:"api.heading.namespace",values:{scopedName:"Dimensions"},mdxType:"Translate"},"{scopedName} namespace")),(0,r.kt)("p",null,"Namespace used to create and manipulate custom dimensions"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)(i.Z,{id:"api.section.signature",mdxType:"Translate"},"Signature"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export namespace Dimensions \n")),(0,r.kt)("h3",null,(0,r.kt)(i.Z,{id:"api.section.classes",mdxType:"Translate"},"Classes")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.class",mdxType:"Translate"},"Class")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/CustomDimension"},"CustomDimension")),(0,r.kt)("td",{parentName:"tr",align:null},"Class representing custom dimension")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/CustomGenerator"},"CustomGenerator")),(0,r.kt)("td",{parentName:"tr",align:null},"Class representing landscape generator used for the dimension")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/MonoBiomeTerrainGenerator"},"MonoBiomeTerrainGenerator")),(0,r.kt)("td",{parentName:"tr",align:null},"Class representing terrain that consists of single biome")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/NoiseConversion"},"NoiseConversion")),(0,r.kt)("td",{parentName:"tr",align:null},'Class representing noise conversion function. Used to define "density" of the landscape at a given height. Values between nodes are interpolated linearly')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/NoiseGenerator"},"NoiseGenerator")),(0,r.kt)("td",{parentName:"tr",align:null},"Class representing multi-layer noise generator")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/NoiseLayer"},"NoiseLayer")),(0,r.kt)("td",{parentName:"tr",align:null},"Class representing single noise layer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/NoiseOctave"},"NoiseOctave")),(0,r.kt)("td",{parentName:"tr",align:null},"Class representing noise octave. Each noise layer consists of multiple noise octaves of different scale and weight")))),(0,r.kt)("h3",null,(0,r.kt)(i.Z,{id:"api.section.functions",mdxType:"Translate"},"Functions")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.function",mdxType:"Translate"},"Function")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/getAllRegisteredCustomBiomes"},"getAllRegisteredCustomBiomes()")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/getDimensionById"},"getDimensionById(id)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/getDimensionByName"},"getDimensionByName(name)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/isLimboId"},"isLimboId(id)")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/newGenerator"},"newGenerator(description)")),(0,r.kt)("td",{parentName:"tr",align:null},"Function used to simplify the creation of terrain generator by passing a json-like structure as a single generator parameter. For detailed explanations see  page")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/overrideGeneratorForVanillaDimension"},"overrideGeneratorForVanillaDimension(id, generator)")),(0,r.kt)("td",{parentName:"tr",align:null},"Overrides default generator of vanilla dimension")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/transfer"},"transfer(entity, dimensionId)")),(0,r.kt)("td",{parentName:"tr",align:null},"Transfers specified entity to the dimension with specified id")))),(0,r.kt)("h3",null,(0,r.kt)(i.Z,{id:"api.section.interfaces",mdxType:"Translate"},"Interfaces")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.interface",mdxType:"Translate"},"Interface")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/AbstractTerrainGenerator"},"AbstractTerrainGenerator")),(0,r.kt)("td",{parentName:"tr",align:null},"Interface representing terrain generator. All terrain generators found in Inner Core API implement this interface")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/NoiseGeneratorParams"},"NoiseGeneratorParams")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/NoiseLayerParams"},"NoiseLayerParams")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/NoiseOctaveParams"},"NoiseOctaveParams")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/TerrainLayer"},"TerrainLayer")),(0,r.kt)("td",{parentName:"tr",align:null},"Class representing single terrain layer that may consist of several noise layers")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/TerrainLayerParams"},"TerrainLayerParams")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/TerrainMaterial"},"TerrainMaterial")),(0,r.kt)("td",{parentName:"tr",align:null},"Class representing material that is used to generate terrain layer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/TerrainMaterialParams"},"TerrainMaterialParams")),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",null,(0,r.kt)(i.Z,{id:"api.section.typeAliases",mdxType:"Translate"},"Type Aliases")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.typeAlias",mdxType:"Translate"},"Type Alias")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/MaterialBlockData"},"MaterialBlockData")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/NoiseConversionParams"},"NoiseConversionParams")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/NoiseOctaveStringType"},"NoiseOctaveStringType")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/Vec2Data"},"Vec2Data")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Dimensions/Vec3Data"},"Vec3Data")),(0,r.kt)("td",{parentName:"tr",align:null})))))}k.isMDXComponent=!0}}]);