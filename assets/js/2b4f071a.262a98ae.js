"use strict";(self.webpackChunkinnercore_docs=self.webpackChunkinnercore_docs||[]).push([[892],{3156:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"KernelExtension/kex-config","title":"kex-config.json file explained","description":"Starting from KernelExtension RELEASE 4.0, you can improve your KEX user experience by creating a new special file in your mod\'s directory, named kex-config.json. It will make easier for KEX to navigate to different non-program files in your mod\'s directory, which are used in-game, without needing to call any additional methods in your mod\'s code.","source":"@site/libraries/KernelExtension/kex-config.md","sourceDirName":"KernelExtension","slug":"/KernelExtension/kex-config","permalink":"/libraries/KernelExtension/kex-config","draft":false,"unlisted":false,"editUrl":"https://github.com/nernar/nernar.github.io/tree/master/libraries/KernelExtension/kex-config.md","tags":[],"version":"current","lastUpdatedAt":1744148471000,"frontMatter":{},"sidebar":"librariesSidebar","previous":{"title":"Defining blocks and items in Java","permalink":"/libraries/KernelExtension/blocks-and-items-in-java"},"next":{"title":"JSON block and item models","permalink":"/libraries/KernelExtension/json-models"}}');var i=r(4848),s=r(8453);const t={},c="kex-config.json file explained",a={},d=[{value:"KEX config parameters",id:"kex-config-parameters",level:2},{value:"<em><strong>kex-config.json</strong></em>",id:"kex-configjson",level:3},{value:"KEX resource directory structure",id:"kex-resource-directory-structure",level:3},{value:"<em><strong>A KEX resource directory</strong></em>",id:"a-kex-resource-directory",level:4}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"kex-configjson-file-explained",children:[(0,i.jsx)(n.code,{children:"kex-config.json"})," file explained"]})}),"\n",(0,i.jsxs)(n.p,{children:["Starting from KernelExtension ",(0,i.jsx)(n.code,{children:"RELEASE 4.0"}),", you can improve your KEX user experience by creating a new special file in your mod's directory, named ",(0,i.jsx)(n.code,{children:"kex-config.json"}),". It will make easier for KEX to navigate to different non-program files in your mod's directory, which are used in-game, without needing to call any additional methods in your mod's code."]}),"\n",(0,i.jsx)(n.h2,{id:"kex-config-parameters",children:"KEX config parameters"}),"\n",(0,i.jsx)(n.h3,{id:"kex-configjson",children:(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"kex-config.json"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'{\n    "resources": [ "kex-res/" ] // KEX resource directory path relative to your mod\'s directory path\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["As of KEX 4.0, ",(0,i.jsx)(n.code,{children:"kex-config.json"})," takes only one parameter ",(0,i.jsx)(n.code,{children:'"resources"'}),", which is used to navigate to one or multiple KEX resource directories inside the directory of your mod. It can be a string if you have one KEX resource directory, or an array of strings if you have multiple of them. The path must be ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"relative to your mod's directory path"})})," and must end with slash (",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"/"})})}),")."]}),"\n",(0,i.jsx)(n.h3,{id:"kex-resource-directory-structure",children:"KEX resource directory structure"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"a-kex-resource-directory",children:(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"A KEX resource directory"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-txt",children:"\u2503\u2014 lang\n\u2503    \u2503\u2014 en_us.json\n\u2503    \u2579\u2014 ru_ru.json\n\u2503\u2014 blockstates\n\u2503    \u2579\u2014 my_block.json\n\u2579\u2014 models\n        \u2503\u2014 block\n        \u2503    \u2579\u2014 my_block_model.json\n        \u2579\u2014 item\n                \u2579\u2014 my_item.json\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Currently there are two things you can make a KEX resource directory in your mod for: ",(0,i.jsx)(n.code,{children:"lang"})," files and JSON block and item models. The latter is explained in detail in ",(0,i.jsx)(n.a,{href:"/libraries/KernelExtension/json-models",children:"this article"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Talking about ",(0,i.jsx)(n.code,{children:"lang"}),"-s, it's just an alternative solution for calling ",(0,i.jsx)(n.a,{href:"https://dmhyt.github.io/kex-docs/api/modules/KEX.I18n.html#addLangDir",children:"KEX.I18n.addLangDir"})," to add your directory containing vanilla localization files. For example, if you create the ",(0,i.jsx)(n.code,{children:"kex-config.json"})," with ",(0,i.jsx)(n.code,{children:'"resources"'})," parameter set to ",(0,i.jsx)(n.code,{children:'"kex-res/"'}),", and create a ",(0,i.jsx)(n.code,{children:'"lang/"'})," folder in ",(0,i.jsx)(n.code,{children:'"your_mod_directory/kex-res/"'}),", you won't need to additionally write this JS/TS code:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"KEX.I18n.addLangDir(`${__dir__}/kex-res/lang/`)\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>c});var o=r(6540);const i={},s=o.createContext(i);function t(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);