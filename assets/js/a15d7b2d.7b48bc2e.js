"use strict";(self.webpackChunkinnercore_docs=self.webpackChunkinnercore_docs||[]).push([[18458],{3905:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>k});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var m=r.createContext({}),s=function(t){var e=r.useContext(m),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},p=function(t){var e=s(t.components);return r.createElement(m.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,m=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),u=s(a),k=n,c=u["".concat(m,".").concat(k)]||u[k]||d[k]||l;return a?r.createElement(c,o(o({ref:e},p),{},{components:a})):r.createElement(c,o({ref:e},p))}));function k(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,o=new Array(l);o[0]=u;var i={};for(var m in e)hasOwnProperty.call(e,m)&&(i[m]=e[m]);i.originalType=t,i.mdxType="string"==typeof t?t:n,o[1]=i;for(var s=2;s<l;s++)o[s]=a[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},60604:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>m,toc:()=>p});var r=a(87462),n=(a(67294),a(3905)),l=a(95999);const o={title:"CustomBiome",sidebar_label:"CustomBiome",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},i=void 0,m={unversionedId:"CustomBiome/index",id:"CustomBiome/index",title:"CustomBiome",description:"",source:"@site/api/www/CustomBiome/index.mdx",sourceDirName:"CustomBiome",slug:"/CustomBiome/",permalink:"/api/CustomBiome/",draft:!1,tags:[],version:"current",frontMatter:{title:"CustomBiome",sidebar_label:"CustomBiome",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},sidebar:"defaultSidebar"},s={},p=[],d={toc:p};function u(t){let{components:e,...a}=t;return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h2",null,(0,n.kt)(l.Z,{id:"api.heading.class",values:{scopedName:"CustomBiome"},mdxType:"Translate"},"{scopedName} class")),(0,n.kt)("p",null,"Class used to create custom biomes. Note that Minecraft has a limit of 256 biomes and there are already more than 100 vanilla biomes, so do not overuse this functionality."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"export class CustomBiome \n")),(0,n.kt)("h3",null,(0,n.kt)(l.Z,{id:"api.section.constructors",mdxType:"Translate"},"Constructors")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(l.Z,{id:"api.block.constructor",mdxType:"Translate"},"Constructor")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(l.Z,{id:"api.block.modifiers",mdxType:"Translate"},"Modifiers")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(l.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/_constructor_"},"(constructor)(name)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Crates a new custom biome with specified string identifier.")))),(0,n.kt)("h3",null,(0,n.kt)(l.Z,{id:"api.section.properties",mdxType:"Translate"},"Properties")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(l.Z,{id:"api.block.property",mdxType:"Translate"},"Property")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(l.Z,{id:"api.block.modifiers",mdxType:"Translate"},"Modifiers")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(l.Z,{id:"api.block.type",mdxType:"Translate"},"Type")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(l.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/id"},"id")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"readonly")),(0,n.kt)("td",{parentName:"tr",align:null},"number"),(0,n.kt)("td",{parentName:"tr",align:null},"custom biome numeric ID.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/name"},"name")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"readonly")),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"Custom biome name.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/pointer"},"pointer")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"readonly")),(0,n.kt)("td",{parentName:"tr",align:null},"number"),(0,n.kt)("td",{parentName:"tr",align:null},"Pointer to biome's native object, represented as long number.")))),(0,n.kt)("h3",null,(0,n.kt)(l.Z,{id:"api.section.methods",mdxType:"Translate"},"Methods")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(l.Z,{id:"api.block.method",mdxType:"Translate"},"Method")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(l.Z,{id:"api.block.modifiers",mdxType:"Translate"},"Modifiers")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(l.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/getAllCustomBiomes"},"getAllCustomBiomes()")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"static")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/isInvalid"},"isInvalid()")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setAdditionalBlock"},"setAdditionalBlock(id, data)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Specifies the block that will cover the biome. E.g. most of the biomes use grass as cover block, though some of the biomes use other blocks (sand, ice, etc.).")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setClientJson"},"setClientJson(json)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Defines the client-side biome params from given JSON string.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setCoverBlock"},"setCoverBlock(id, data)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Specifies the block that will cover the biome; e.g., most of the biomes use grass as cover block, though some of the biomes use other blocks (sand, ice, etc.).")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setFillingBlock"},"setFillingBlock(id, data)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Sets the block that fills the terrain. Vanilla biomes use stone filling.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setFoliageColor"},"setFoliageColor(r, g, b)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Sets biome's foliage color.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setFoliageColor"},"setFoliageColor(color)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Sets biome's foliage color.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setGrassColor"},"setGrassColor(r, g, b)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Sets biome's grass color. Grass color is interpolated on the bounds of the biome.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setGrassColor"},"setGrassColor(color)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Sets biome's grass color. Grass color is interpolated on the bounds of the biome.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setSeaFloorBlock"},"setSeaFloorBlock(id, data)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Sets the block that fills the floor at the bottom of the sea or the ocean. Vanilla biomes use gravel or stone filling.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setSeaFloorDepth"},"setSeaFloorDepth(depth)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Sets the average depth of the sea floor in this biome.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setServerJson"},"setServerJson(json)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Defines the server-side biome params from given JSON string.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setSkyColor"},"setSkyColor(r, g, b)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Sets biome's sky color.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setSkyColor"},"setSkyColor(color)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Sets biome's sky color.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setSurfaceBlock"},"setSurfaceBlock(id, data)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Specifies the block that will be under the covering block of the biome; e.g., most of the biomes use dirt as cover block, though some of the biomes use other blocks.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setSurfaceParam"},"setSurfaceParam(param)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Sets the average depth of the something in this biome.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setTemperatureAndDownfall"},"setTemperatureAndDownfall(temperature, downfall)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Sets biome's temperature and downfall.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setWaterColor"},"setWaterColor(r, g, b)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Sets biome's water color.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/CustomBiome/setWaterColor"},"setWaterColor(color)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Sets biome's water color.")))))}u.isMDXComponent=!0}}]);