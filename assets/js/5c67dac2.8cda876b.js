"use strict";(self.webpackChunkinnercore_docs=self.webpackChunkinnercore_docs||[]).push([[4516],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>u});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=d(n),u=a,g=c["".concat(p,".").concat(u)]||c[u]||m[u]||i;return n?r.createElement(g,l(l({ref:t},s),{},{components:n})):r.createElement(g,l({ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},59081:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var r=n(87462),a=(n(67294),n(3905)),i=n(95999);const l={title:"IDRegistry",sidebar_label:"IDRegistry",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},o=void 0,p={unversionedId:"IDRegistry/index",id:"IDRegistry/index",title:"IDRegistry",description:"",source:"@site/api/www/IDRegistry/index.mdx",sourceDirName:"IDRegistry",slug:"/IDRegistry/",permalink:"/api/IDRegistry/",draft:!1,tags:[],version:"current",frontMatter:{title:"IDRegistry",sidebar_label:"IDRegistry",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},sidebar:"defaultSidebar"},d={},s=[],m={toc:s};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",null,(0,a.kt)(i.Z,{id:"api.heading.namespace",values:{scopedName:"IDRegistry"},mdxType:"Translate"},"{scopedName} namespace")),(0,a.kt)("p",null,'Module used to manage item and block IDs. Items and blocks have the same underlying nature, so their IDs are interchangeable. Though, the blocks are defined "twice", as an item (in player\'s hand or inventory) and as a tile (a block placed in the world).'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export namespace IDRegistry \n")),(0,a.kt)("h3",null,(0,a.kt)(i.Z,{id:"api.section.variables",mdxType:"Translate"},"Variables")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)(i.Z,{id:"api.block.variable",mdxType:"Translate"},"Variable")),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)(i.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/api/IDRegistry/BLOCK_ID_OFFSET"},"BLOCK","_","ID","_","OFFSET")),(0,a.kt)("td",{parentName:"tr",align:null},"Defines the numeric ID of the first user-defined block.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/api/IDRegistry/ITEM_ID_OFFSET"},"ITEM","_","ID","_","OFFSET")),(0,a.kt)("td",{parentName:"tr",align:null},"Defines the numeric ID of the first user-defined item.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/api/IDRegistry/MAX_ID"},"MAX","_","ID")),(0,a.kt)("td",{parentName:"tr",align:null},"Defines maximum item/block ID.")))),(0,a.kt)("h3",null,(0,a.kt)(i.Z,{id:"api.section.functions",mdxType:"Translate"},"Functions")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)(i.Z,{id:"api.block.function",mdxType:"Translate"},"Function")),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)(i.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/api/IDRegistry/ensureBlockId"},"ensureBlockId(id)")),(0,a.kt)("td",{parentName:"tr",align:null},"Ensures given ID is a tile ID, not a block ID. It is generally recommended to use ",(0,a.kt)("a",{parentName:"td",href:"/api/Block/convertItemToBlockId"},"Block.convertItemToBlockId()")," since it performs less calculations.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/api/IDRegistry/ensureItemId"},"ensureItemId(id)")),(0,a.kt)("td",{parentName:"tr",align:null},"Ensures given ID is a block ID, not a tile ID. It is generally recommended to use ",(0,a.kt)("a",{parentName:"td",href:"/api/Block/convertBlockToItemId"},"Block.convertBlockToItemId()")," since it performs less calculations.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/api/IDRegistry/genBlockID"},"genBlockID(name)")),(0,a.kt)("td",{parentName:"tr",align:null},"Generates a new numeric block ID.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/api/IDRegistry/genItemID"},"genItemID(name)")),(0,a.kt)("td",{parentName:"tr",align:null},"Generates a new numeric item ID.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/api/IDRegistry/getIdInfo"},"getIdInfo(id)")),(0,a.kt)("td",{parentName:"tr",align:null},'Gets type of item ("block" or "item") and it\'s string ID in Minecraft.')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/api/IDRegistry/getNameByID"},"getNameByID(id)")),(0,a.kt)("td",{parentName:"tr",align:null},"Gets item or block string ID by it's numeric ID.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/api/IDRegistry/getStringIdAndTypeForIntegerId"},"getStringIdAndTypeForIntegerId(id)")),(0,a.kt)("td",{parentName:"tr",align:null},'Gets type of item ("block" or "item") and it\'s string ID in Minecraft.')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/api/IDRegistry/getStringIdForIntegerId"},"getStringIdForIntegerId(id)")),(0,a.kt)("td",{parentName:"tr",align:null},"Gets item string ID in Minecraft.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/api/IDRegistry/getTypeForIntegerId"},"getTypeForIntegerId(id)")),(0,a.kt)("td",{parentName:"tr",align:null},'Gets type of item ("block" or "item").')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/api/IDRegistry/isVanilla"},"isVanilla(id)")),(0,a.kt)("td",{parentName:"tr",align:null})))))}c.isMDXComponent=!0}}]);