"use strict";(self.webpackChunkinnercore_docs=self.webpackChunkinnercore_docs||[]).push([[98268],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>c});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),k=d(a),c=r,N=k["".concat(o,".").concat(c)]||k[c]||s[c]||i;return a?n.createElement(N,l(l({ref:t},m),{},{components:a})):n.createElement(N,l({ref:t},m))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=k;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},35634:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>k,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var n=a(87462),r=(a(67294),a(3905)),i=a(95999);const l={title:"com.zhekasmirnov.innercore.api.NativeRenderMesh",sidebar_label:"NativeRenderMesh",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},p=void 0,o={unversionedId:"com/zhekasmirnov/innercore/api/NativeRenderMesh/index",id:"com/zhekasmirnov/innercore/api/NativeRenderMesh/index",title:"com.zhekasmirnov.innercore.api.NativeRenderMesh",description:"",source:"@site/api/www/com/zhekasmirnov/innercore/api/NativeRenderMesh/index.mdx",sourceDirName:"com/zhekasmirnov/innercore/api/NativeRenderMesh",slug:"/com/zhekasmirnov/innercore/api/NativeRenderMesh/",permalink:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/",draft:!1,tags:[],version:"current",frontMatter:{title:"com.zhekasmirnov.innercore.api.NativeRenderMesh",sidebar_label:"NativeRenderMesh",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},sidebar:"defaultSidebar"},d={},m=[],s={toc:m};function k(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",null,(0,r.kt)(i.Z,{id:"api.heading.class",values:{scopedName:"com.zhekasmirnov.innercore.api.NativeRenderMesh"},mdxType:"Translate"},"{scopedName} class")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export class NativeRenderMesh extends java.lang.Object \n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)(i.Z,{id:"api.descriptor.extends",mdxType:"Translate"},"Extends: ")),(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/java/lang/Object"},"java.lang.Object")),(0,r.kt)("h3",null,(0,r.kt)(i.Z,{id:"api.section.properties",mdxType:"Translate"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.property",mdxType:"Translate"},"Property")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.modifiers",mdxType:"Translate"},"Modifiers")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.type",mdxType:"Translate"},"Type")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/class"},"class")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://developer.android.com/reference/java/lang/Class"},"java.lang.Class"),"<",(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh"},"NativeRenderMesh"),">"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",null,(0,r.kt)(i.Z,{id:"api.section.methods",mdxType:"Translate"},"Methods")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.method",mdxType:"Translate"},"Method")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.modifiers",mdxType:"Translate"},"Modifiers")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/addMesh"},"addMesh(mesh)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Adds new mesh to the current one on the specified coordinates with specified scale.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/addMesh"},"addMesh(mesh, addX, addY, addZ)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/addMesh"},"addMesh(mesh, addX, addY, addZ, scaleX, scaleY, scaleZ)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/addVertex"},"addVertex(x, y, z)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Adds a new vertex on the specified coordinates.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/addVertex"},"addVertex(x, y, z, u, v)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Adds a new vertex on the specified coordinates.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/clear"},"clear()")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Removes all vertices of the mesh.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/clone"},"clone()")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Creates a copy of current .")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/fitIn"},"fitIn(x1, y1, z1, x2, y2, z2)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Scales the mesh to fit into the specified box.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/fitIn"},"fitIn(x1, y1, z1, x2, y2, z2, keepRatio)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Scales the mesh to fit into the specified box.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/getPtr"},"getPtr()")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/getReadOnlyVertexData"},"getReadOnlyVertexData()")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/importFromFile"},"importFromFile(path, type, importParams)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Imports mesh file using specified path.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/invalidate"},"invalidate()")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/newGuiRenderMesh"},"newGuiRenderMesh()")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/rebuild"},"rebuild()")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Forces Minecraft to rebuild specified  object.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/resetColor"},"resetColor()")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Resets color applied to the mesh.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/resetTexture"},"resetTexture()")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Resets texture of the mesh.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/rotate"},"rotate(x, y, z, rotX, rotY, rotZ)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Rotates the mesh around the specified coordinates.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/rotate"},"rotate(rotX, rotY, rotZ)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Rotates the mesh around the (0, 0, 0) coordinates.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/scale"},"scale(x, y, z)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Scales the whole mesh along the three axis.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/setBlockTexture"},"setBlockTexture(textureName, textureMeta)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies block texture to be used by mesh.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/setColor"},"setColor(r, g, b)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies color to be applied to the next vertices. If the color is not white and the texture is applied to mesh, texture's colors will be affected.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/setColor"},"setColor(r, g, b, a)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/setFoliageTinted"},"setFoliageTinted()")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Makes specified  foliage tinted.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/setFoliageTinted"},"setFoliageTinted(tintSource)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/setGrassTinted"},"setGrassTinted()")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Makes specified  grass tinted.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/setLightDir"},"setLightDir(x, y, z)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Sets following  light direction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/setLightIgnore"},"setLightIgnore(ignore, bool2)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/setLightParams"},"setLightParams(float1, float2, float3)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/setLightPos"},"setLightPos(x, y, z)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Sets following  light position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/setNormal"},"setNormal(x, y, z)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies the normal vector for the next vertices.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/setNoTint"},"setNoTint()")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Removes any tint from specified .")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/setWaterTinted"},"setWaterTinted()")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Makes specified  water tinted.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/translate"},"translate(x, y, z)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Translates the whole mesh along three axis.")))),(0,r.kt)("hr",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export module NativeRenderMesh \n")),(0,r.kt)("h3",null,(0,r.kt)(i.Z,{id:"api.section.classes",mdxType:"Translate"},"Classes")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.class",mdxType:"Translate"},"Class")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/ReadOnlyVertexData"},"ReadOnlyVertexData")),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",null,(0,r.kt)(i.Z,{id:"api.section.interfaces",mdxType:"Translate"},"Interfaces")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.interface",mdxType:"Translate"},"Interface")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/com/zhekasmirnov/innercore/api/NativeRenderMesh/ImportParams"},"ImportParams")),(0,r.kt)("td",{parentName:"tr",align:null},"Object used in  and one of  constructors. Here you can put some additional parameters, that will be applied to the mesh, when the file is being imported.")))))}k.isMDXComponent=!0}}]);