"use strict";(self.webpackChunkinnercore_docs=self.webpackChunkinnercore_docs||[]).push([[77653],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=c(n),k=r,m=d["".concat(p,".").concat(k)]||d[k]||u[k]||i;return n?a.createElement(m,l(l({ref:t},s),{},{components:n})):a.createElement(m,l({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85833:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var a=n(87462),r=(n(67294),n(3905)),i=n(95999);const l={title:"Block.BlockVariation",sidebar_label:"BlockVariation",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},o=void 0,p={unversionedId:"Block/BlockVariation/index",id:"Block/BlockVariation/index",title:"Block.BlockVariation",description:"",source:"@site/api/www/Block/BlockVariation/index.mdx",sourceDirName:"Block/BlockVariation",slug:"/Block/BlockVariation/",permalink:"/api/Block/BlockVariation/",draft:!1,tags:[],version:"current",frontMatter:{title:"Block.BlockVariation",sidebar_label:"BlockVariation",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},sidebar:"defaultSidebar"},c={},s=[],u={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",null,(0,r.kt)(i.Z,{id:"api.heading.interface",values:{scopedName:"Block.BlockVariation"},mdxType:"Translate"},"{scopedName} interface")),(0,r.kt)("p",null,"Object used to represent single block variation"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)(i.Z,{id:"api.section.signature",mdxType:"Translate"},"Signature"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface BlockVariation \n")),(0,r.kt)("h3",null,(0,r.kt)(i.Z,{id:"api.section.properties",mdxType:"Translate"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.property",mdxType:"Translate"},"Property")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.modifiers",mdxType:"Translate"},"Modifiers")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.type",mdxType:"Translate"},"Type")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)(i.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Block/BlockVariation/inCreative"},"inCreative?")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("i",null,(0,r.kt)(i.Z,{id:"api.block.optional",mdxType:"Translate"},"(Optional)"))," If true, block variation will be added to creative inventory")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Block/BlockVariation/name"},"name?")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("i",null,(0,r.kt)(i.Z,{id:"api.block.optional",mdxType:"Translate"},"(Optional)"))," Variation name, displayed as item name everywhere. Default value is ","*",'"Unknown Block"',"*")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/Block/BlockVariation/texture"},"texture")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"[","string, number","]","[","]"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"Variation textures, array containing pairs of texture name and data. Texture file should be located in items-opaque folder and its name should be in the format: ","*","name","_","data","*",", e.g. if the file name is ","*","ingot","_","copper","_","0","*",", you should specify an array"))))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'["ingot_copper", 0]\n')),(0,r.kt)("p",null,"There should be from one to six texture pairs in the array, if less then six variations are specified, the last texture is used for missing textures. The sides go in the following order:"),'```js texture: [ ["\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u04351", \u0438\u043d\u0434\u0435\u043a\u04411], // bottom (Y: -1) ["\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u04352", \u0438\u043d\u0434\u0435\u043a\u04412], // top (Y: +1) ["\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u04353", \u0438\u043d\u0434\u0435\u043a\u04413], // back (X: -1) ["\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u04354", \u0438\u043d\u0434\u0435\u043a\u04414], // front (X: +1) ["\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u04355", \u0438\u043d\u0434\u0435\u043a\u04415], // left (Z: -1) ["\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u04356", \u0438\u043d\u0434\u0435\u043a\u04416]  // right (Z: +1) ] ``` |')}d.isMDXComponent=!0}}]);