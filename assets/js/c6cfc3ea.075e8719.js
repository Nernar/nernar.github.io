"use strict";(self.webpackChunkinnercore_docs=self.webpackChunkinnercore_docs||[]).push([[85155],{3905:(t,e,a)=>{a.d(e,{Zo:()=>s,kt:()=>u});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var o=r.createContext({}),c=function(t){var e=r.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},s=function(t){var e=c(t.components);return r.createElement(o.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,o=t.parentName,s=p(t,["components","mdxType","originalType","parentName"]),d=c(a),u=n,k=d["".concat(o,".").concat(u)]||d[u]||m[u]||i;return a?r.createElement(k,l(l({ref:e},s),{},{components:a})):r.createElement(k,l({ref:e},s))}));function u(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,l=new Array(i);l[0]=d;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p.mdxType="string"==typeof t?t:n,l[1]=p;for(var c=2;c<i;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},79565:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>p,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=a(87462),n=(a(67294),a(3905)),i=a(95999);const l={title:"Particles.ParticleDescription",sidebar_label:"ParticleDescription",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},p=void 0,o={unversionedId:"Particles/ParticleDescription/index",id:"Particles/ParticleDescription/index",title:"Particles.ParticleDescription",description:"",source:"@site/api/www/Particles/ParticleDescription/index.mdx",sourceDirName:"Particles/ParticleDescription",slug:"/Particles/ParticleDescription/",permalink:"/api/Particles/ParticleDescription/",draft:!1,tags:[],version:"current",frontMatter:{title:"Particles.ParticleDescription",sidebar_label:"ParticleDescription",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null,hide_title:!0},sidebar:"defaultSidebar"},c={},s=[],m={toc:s};function d(t){let{components:e,...a}=t;return(0,n.kt)("wrapper",(0,r.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h2",null,(0,n.kt)(i.Z,{id:"api.heading.interface",values:{scopedName:"Particles.ParticleDescription"},mdxType:"Translate"},"{scopedName} interface")),(0,n.kt)("p",null,"Custom particle type params object"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)(i.Z,{id:"api.section.signature",mdxType:"Translate"},"Signature"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"interface ParticleDescription \n")),(0,n.kt)("h3",null,(0,n.kt)(i.Z,{id:"api.section.properties",mdxType:"Translate"},"Properties")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(i.Z,{id:"api.block.property",mdxType:"Translate"},"Property")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(i.Z,{id:"api.block.modifiers",mdxType:"Translate"},"Modifiers")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(i.Z,{id:"api.block.type",mdxType:"Translate"},"Type")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)(i.Z,{id:"api.block.description",mdxType:"Translate"},"Description")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleDescription/acceleration"},"acceleration?")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"[","number, number, number","]"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("i",null,(0,n.kt)(i.Z,{id:"api.block.optional",mdxType:"Translate"},"(Optional)"))," Particle's acceleration, if it's spawned without this parameter. Default is ","[","0, 0, 0","]")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleDescription/addLifetimeAfterImpact"},"addLifetimeAfterImpact?")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"number"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("i",null,(0,n.kt)(i.Z,{id:"api.block.optional",mdxType:"Translate"},"(Optional)"))," Particle will lose given number of ticks from its maximum lifetime, when touching a block. This value makes sense only if collision param is true. Default is 0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleDescription/animators"},"animators?")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"{ size?: ",(0,n.kt)("a",{parentName:"td",href:"/api/Particles/AnimatorDescription"},"AnimatorDescription"),"; alpha?: ",(0,n.kt)("a",{parentName:"td",href:"/api/Particles/AnimatorDescription"},"AnimatorDescription"),"; texture?: ",(0,n.kt)("a",{parentName:"td",href:"/api/Particles/AnimatorDescription"},"AnimatorDescription"),"; icon?: ",(0,n.kt)("a",{parentName:"td",href:"/api/Particles/AnimatorDescription"},"AnimatorDescription"),"; }"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("i",null,(0,n.kt)(i.Z,{id:"api.block.optional",mdxType:"Translate"},"(Optional)"))," Animators allow to change some properties of the specific particle depending on the time, each animator is described as an object of definite format and can be not described, if it's not needed.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleDescription/collision"},"collision?")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("i",null,(0,n.kt)(i.Z,{id:"api.block.optional",mdxType:"Translate"},"(Optional)"))," If true, particle won't go through blocks. It reduces performance if there are lots of these particles, default is false.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleDescription/color"},"color?")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"[","number, number, number, number","]"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("i",null,(0,n.kt)(i.Z,{id:"api.block.optional",mdxType:"Translate"},"(Optional)"))," Four component color of the particle (RGBA), default is ","[","1, 1, 1, 1","]")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleDescription/emitters"},"emitters?")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"{ idle?: ",(0,n.kt)("a",{parentName:"td",href:"/api/Particles/SubEmitterDescription"},"SubEmitterDescription"),"; impact?: ",(0,n.kt)("a",{parentName:"td",href:"/api/Particles/SubEmitterDescription"},"SubEmitterDescription"),"; death?: ",(0,n.kt)("a",{parentName:"td",href:"/api/Particles/SubEmitterDescription"},"SubEmitterDescription"),"; }"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("i",null,(0,n.kt)(i.Z,{id:"api.block.optional",mdxType:"Translate"},"(Optional)"))," Sub-emitters (don't confuse with emitters) describe how specific particle can emit other particles, according to some events, that may happen to it. Each sub-emitter is described as an object of definite format and can be not described if it's not needed.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleDescription/friction"},"friction?")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"{ air?: number; block?: number; }"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("i",null,(0,n.kt)(i.Z,{id:"api.block.optional",mdxType:"Translate"},"(Optional)"))," Particle's speed modifier in the air and when touching a block. Usually it's a number between 0 and 1, close to 1, but in fact it can be any value. Both values are 1 by default.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleDescription/isUsingBlockLight"},"isUsingBlockLight?")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("i",null,(0,n.kt)(i.Z,{id:"api.block.optional",mdxType:"Translate"},"(Optional)"))," If true, the particle will be exposed to the world's lighting. If false, the particle will always have maximum brightness. Enabling this parameter may reduce the performance when having lots of particles. Default is false.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleDescription/keepVelocityAfterImpact"},"keepVelocityAfterImpact?")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("i",null,(0,n.kt)(i.Z,{id:"api.block.optional",mdxType:"Translate"},"(Optional)"))," If false, particle's speed will be set to zero when touching a block. If true, the speed will be saved. This value makes sense only if collision param is true")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleDescription/lifetime"},"lifetime")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"[","number, number","]"),(0,n.kt)("td",{parentName:"tr",align:null},"Minimum and maximum particle's lifetime in ticks")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleDescription/render"},"render?")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"0 ","|"," 1 ","|"," 2"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("i",null,(0,n.kt)(i.Z,{id:"api.block.optional",mdxType:"Translate"},"(Optional)"))," Particle's render type: 0 - additive, 1 - without blending, 2 - with blending.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleDescription/size"},"size")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"[","number, number","]"),(0,n.kt)("td",{parentName:"tr",align:null},"Minimum and maximum size of the particle")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleDescription/texture"},"texture")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"Particle's texture name from 'particle-atlas' resource directory")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/Particles/ParticleDescription/velocity"},"velocity?")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"[","number, number, number","]"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("i",null,(0,n.kt)(i.Z,{id:"api.block.optional",mdxType:"Translate"},"(Optional)"))," Particle's initial velocity, if it's spawned without initial speed parameter. Default is ","[","0, 0, 0","]")))))}d.isMDXComponent=!0}}]);